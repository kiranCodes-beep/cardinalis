{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\e-commerce\\\\front_end_copy\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth, fbSignIn, doc, getDoc, db, registerUser, loginWithGoogle, updateUserProfile, sendPasswordReset, mergeCarts, getUserCart } from '../firebase/firebase';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async user => {\n      if (user) {\n        try {\n          // Get additional user data from Firestore\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setCurrentUser({\n              ...user,\n              ...userDoc.data()\n            });\n          } else {\n            setCurrentUser(user);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n          setCurrentUser(user);\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n\n      // Perform login\n      const userCredential = await fbSignIn(auth, email, password);\n      const userDoc = await getDoc(doc(db, 'users', userCredential.user.uid));\n      if (!userDoc.exists()) {\n        throw new Error('User profile not found');\n      }\n\n      // Load user's cart from Firestore\n      const userCart = await getUserCart(userCredential.user.uid);\n\n      // Update state\n      setCurrentUser({\n        ...userCredential.user,\n        ...userDoc.data()\n      });\n      setCart(userCart.items || []);\n      toast.success('Logged in successfully!');\n    } catch (error) {\n      // Error handling\n      let errorMessage = 'Login failed';\n\n      // Handle specific Firebase auth errors\n      if (error.code === 'auth/wrong-password') {\n        errorMessage = 'Incorrect password';\n      } else if (error.code === 'auth/user-not-found') {\n        errorMessage = 'User not found';\n      } else if (error.code === 'auth/invalid-email') {\n        errorMessage = 'Invalid email address';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many attempts. Try again later';\n      } else if (error.message === 'User profile not found') {\n        errorMessage = 'User profile not found';\n      }\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, displayName) => {\n    try {\n      setLoading(true);\n      const userCredential = await registerUser(email, password, {\n        displayName\n      });\n      setCurrentUser(userCredential.user);\n      toast.success('Account created successfully!');\n      return userCredential;\n    } catch (error) {\n      let errorMessage = error.message;\n      if (error.code === 'auth/email-already-in-use') {\n        errorMessage = 'Email already in use';\n      }\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const googleSignIn = async () => {\n    try {\n      setLoading(true);\n      const guestCart = JSON.parse(localStorage.getItem('cart')) || {\n        items: []\n      };\n      const userCredential = await loginWithGoogle();\n      if (guestCart.items.length > 0) {\n        await mergeCarts(userCredential.user.uid, guestCart);\n      }\n      const userCart = await getUserCart(userCredential.user.uid);\n      setCurrentUser({\n        ...userCredential.user,\n        cart: userCart\n      });\n      localStorage.removeItem('cart');\n      toast.success('Logged in with Google successfully!');\n      return userCredential;\n    } catch (error) {\n      // ... (keep existing error handling)\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetPassword = async email => {\n    try {\n      await sendPasswordReset(email); // Change from resetPassword to sendPasswordReset\n      toast.success('Password reset email sent!');\n      return true;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      await auth.signOut();\n      setCurrentUser(null);\n      setCart([]); // Clear local cart state\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async data => {\n    if (!currentUser) return Promise.reject('No user logged in');\n    try {\n      await updateUserProfile(currentUser.uid, data);\n      setCurrentUser({\n        ...currentUser,\n        ...data\n      });\n      toast.success('Profile updated successfully!');\n      return true;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    cart,\n    setCart,\n    login,\n    register,\n    googleSignIn,\n    resetPassword,\n    logout,\n    updateProfile,\n    isAuthenticated: !!currentUser,\n    isEmailVerified: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.emailVerified) || false,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"hTFdSQVpLMBe/cCckfQ6JyBT1zk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","fbSignIn","doc","getDoc","db","registerUser","loginWithGoogle","updateUserProfile","sendPasswordReset","mergeCarts","getUserCart","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","cart","setCart","unsubscribe","onAuthStateChanged","user","userDoc","uid","exists","data","error","console","login","email","password","userCredential","Error","userCart","items","success","errorMessage","code","message","register","displayName","googleSignIn","guestCart","JSON","parse","localStorage","getItem","length","removeItem","resetPassword","logout","signOut","updateProfile","Promise","reject","value","isAuthenticated","isEmailVerified","emailVerified","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","$RefreshReg$"],"sources":["C:/Users/kiran/Downloads/e-commerce/front_end_copy/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n \r\n\r\nimport { \r\n  auth,   \r\n  fbSignIn,   \r\n  doc,  \r\n  getDoc,   \r\n  db ,  \r\n  registerUser,   \r\n  loginWithGoogle,   \r\n  updateUserProfile ,\r\n  sendPasswordReset,\r\n   mergeCarts,      \r\n  getUserCart,      \r\n} from '../firebase/firebase';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [cart, setCart] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        try {\r\n          // Get additional user data from Firestore\r\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n          if (userDoc.exists()) {\r\n            setCurrentUser({ ...user, ...userDoc.data() });\r\n          } else {\r\n            setCurrentUser(user);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data:\", error);\r\n          setCurrentUser(user);\r\n        }\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n  try {\r\n    setLoading(true);\r\n    \r\n    // Perform login\r\n    const userCredential = await fbSignIn(auth, email, password);\r\n    const userDoc = await getDoc(doc(db, 'users', userCredential.user.uid));\r\n    \r\n    if (!userDoc.exists()) {\r\n      throw new Error('User profile not found');\r\n    }\r\n\r\n    // Load user's cart from Firestore\r\n    const userCart = await getUserCart(userCredential.user.uid);\r\n    \r\n    // Update state\r\n    setCurrentUser({ \r\n      ...userCredential.user, \r\n      ...userDoc.data() \r\n    });\r\n    setCart(userCart.items || []);\r\n    \r\n    toast.success('Logged in successfully!');\r\n  } catch (error) {\r\n    // Error handling\r\n    let errorMessage = 'Login failed';\r\n    \r\n    // Handle specific Firebase auth errors\r\n    if (error.code === 'auth/wrong-password') {\r\n      errorMessage = 'Incorrect password';\r\n    } else if (error.code === 'auth/user-not-found') {\r\n      errorMessage = 'User not found';\r\n    } else if (error.code === 'auth/invalid-email') {\r\n      errorMessage = 'Invalid email address';\r\n    } else if (error.code === 'auth/too-many-requests') {\r\n      errorMessage = 'Too many attempts. Try again later';\r\n    } else if (error.message === 'User profile not found') {\r\n      errorMessage = 'User profile not found';\r\n    }\r\n    \r\n    toast.error(errorMessage);\r\n    throw error;\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  const register = async (email, password, displayName) => {\r\n    try {\r\n      setLoading(true);\r\n      const userCredential = await registerUser(email, password, { displayName });\r\n      setCurrentUser(userCredential.user);\r\n      \r\n      toast.success('Account created successfully!');\r\n      return userCredential;\r\n    } catch (error) {\r\n      let errorMessage = error.message;\r\n      \r\n      if (error.code === 'auth/email-already-in-use') {\r\n        errorMessage = 'Email already in use';\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const googleSignIn = async () => {\r\n  try {\r\n    setLoading(true);\r\n    const guestCart = JSON.parse(localStorage.getItem('cart')) || { items: [] };\r\n    \r\n    const userCredential = await loginWithGoogle();\r\n    \r\n    if (guestCart.items.length > 0) {\r\n      await mergeCarts(userCredential.user.uid, guestCart);\r\n    }\r\n    \r\n    const userCart = await getUserCart(userCredential.user.uid);\r\n    \r\n    setCurrentUser({ \r\n      ...userCredential.user,\r\n      cart: userCart\r\n    });\r\n    \r\n    localStorage.removeItem('cart');\r\n    toast.success('Logged in with Google successfully!');\r\n    return userCredential;\r\n  } catch (error) {\r\n    // ... (keep existing error handling)\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  const resetPassword = async (email) => {\r\n  try {\r\n    await sendPasswordReset(email);  // Change from resetPassword to sendPasswordReset\r\n    toast.success('Password reset email sent!');\r\n    return true;\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n  const logout = async () => {\r\n  try {\r\n    setLoading(true);\r\n    await auth.signOut();\r\n    setCurrentUser(null);\r\n    setCart([]); // Clear local cart state\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  const updateProfile = async (data) => {\r\n    if (!currentUser) return Promise.reject('No user logged in');\r\n    try {\r\n      await updateUserProfile(currentUser.uid, data);\r\n      setCurrentUser({ ...currentUser, ...data });\r\n      toast.success('Profile updated successfully!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    cart,\r\n    setCart,\r\n    login,\r\n    register,\r\n    googleSignIn,\r\n    resetPassword,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!currentUser,\r\n    isEmailVerified: currentUser?.emailVerified || false,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}