{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\e-commerce\\\\front_end_copy\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { doc, getDoc, setDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase/firebaseConfig';\nimport { useAuth } from './AuthContext';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Load cart from Firestore or localStorage\n  const loadCart = useCallback(async () => {\n    setLoading(true);\n    try {\n      if (currentUser) {\n        const cartSnap = await getDoc(doc(db, 'userCarts', currentUser.uid));\n        setCartItems(cartSnap.exists() ? cartSnap.data().items : []);\n      } else {\n        setCartItems(JSON.parse(localStorage.getItem('guestCart')) || []);\n      }\n    } catch (error) {\n      toast.error('Failed to load cart');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser]);\n\n  // Save cart to appropriate storage\n  const saveCart = useCallback(async () => {\n    if (loading) return;\n    try {\n      if (currentUser) {\n        await updateDoc(doc(db, 'userCarts', currentUser.uid), {\n          items: cartItems,\n          updatedAt: serverTimestamp()\n        });\n      } else {\n        localStorage.setItem('guestCart', JSON.stringify(cartItems));\n      }\n    } catch (error) {\n      console.error('Failed to save cart:', error);\n    }\n  }, [cartItems, currentUser, loading]);\n\n  // Merge guest cart on login\n  const mergeCarts = useCallback(async () => {\n    if (!currentUser) return;\n    const guestCart = JSON.parse(localStorage.getItem('guestCart')) || [];\n    if (guestCart.length === 0) return;\n    try {\n      await updateDoc(doc(db, 'userCarts', currentUser.uid), {\n        items: [...cartItems, ...guestCart],\n        updatedAt: serverTimestamp()\n      });\n      localStorage.removeItem('guestCart');\n      toast.success('Cart items merged!');\n      loadCart();\n    } catch (error) {\n      console.error('Merge failed:', error);\n    }\n  }, [currentUser, cartItems, loadCart]);\n\n  // Effects\n  useEffect(() => {\n    loadCart();\n  }, [loadCart]);\n  useEffect(() => {\n    saveCart();\n  }, [saveCart]);\n  useEffect(() => {\n    mergeCarts();\n  }, [mergeCarts]);\n\n  // Cart actions\n  const addToCart = item => {\n    setCartItems(prev => {\n      const existing = prev.find(i => i.id === item.id && i.size === item.size);\n      return existing ? prev.map(i => i === existing ? {\n        ...i,\n        quantity: i.quantity + (item.quantity || 1)\n      } : i) : [...prev, {\n        ...item,\n        quantity: item.quantity || 1\n      }];\n    });\n    toast.success(`${item.name} added to cart!`);\n  };\n  const removeFromCart = (id, size) => {\n    setCartItems(prev => prev.filter(i => !(i.id === id && i.size === size)));\n    toast.success('Item removed');\n  };\n  const updateQuantity = (id, size, quantity) => {\n    if (quantity < 1) return;\n    setCartItems(prev => prev.map(i => i.id === id && i.size === size ? {\n      ...i,\n      quantity\n    } : i));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    toast.success('Cart cleared');\n  };\n\n  // Calculations\n  const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  const tax = subtotal * 0.1;\n  const total = subtotal + tax;\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      subtotal,\n      itemCount,\n      total,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"WpGlNG/Non+HLLvFVnbNdF33WvQ=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useCallback","doc","getDoc","setDoc","updateDoc","serverTimestamp","db","useAuth","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","currentUser","cartItems","setCartItems","loading","setLoading","loadCart","cartSnap","uid","exists","data","items","JSON","parse","localStorage","getItem","error","console","saveCart","updatedAt","setItem","stringify","mergeCarts","guestCart","length","removeItem","success","addToCart","item","prev","existing","find","i","id","size","map","quantity","name","removeFromCart","filter","updateQuantity","clearCart","subtotal","reduce","sum","price","itemCount","tax","total","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/kiran/Downloads/e-commerce/front_end_copy/src/Context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState, useCallback } from 'react';\r\nimport { doc, getDoc, setDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from '../firebase/firebaseConfig';\r\nimport { useAuth } from './AuthContext';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const { currentUser } = useAuth();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load cart from Firestore or localStorage\r\n  const loadCart = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (currentUser) {\r\n        const cartSnap = await getDoc(doc(db, 'userCarts', currentUser.uid));\r\n        setCartItems(cartSnap.exists() ? cartSnap.data().items : []);\r\n      } else {\r\n        setCartItems(JSON.parse(localStorage.getItem('guestCart')) || []);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Failed to load cart');\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Save cart to appropriate storage\r\n  const saveCart = useCallback(async () => {\r\n    if (loading) return;\r\n    try {\r\n      if (currentUser) {\r\n        await updateDoc(doc(db, 'userCarts', currentUser.uid), {\r\n          items: cartItems,\r\n          updatedAt: serverTimestamp()\r\n        });\r\n      } else {\r\n        localStorage.setItem('guestCart', JSON.stringify(cartItems));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save cart:', error);\r\n    }\r\n  }, [cartItems, currentUser, loading]);\r\n\r\n  // Merge guest cart on login\r\n  const mergeCarts = useCallback(async () => {\r\n    if (!currentUser) return;\r\n    const guestCart = JSON.parse(localStorage.getItem('guestCart')) || [];\r\n    if (guestCart.length === 0) return;\r\n\r\n    try {\r\n      await updateDoc(doc(db, 'userCarts', currentUser.uid), {\r\n        items: [...cartItems, ...guestCart],\r\n        updatedAt: serverTimestamp()\r\n      });\r\n      localStorage.removeItem('guestCart');\r\n      toast.success('Cart items merged!');\r\n      loadCart();\r\n    } catch (error) {\r\n      console.error('Merge failed:', error);\r\n    }\r\n  }, [currentUser, cartItems, loadCart]);\r\n\r\n  // Effects\r\n  useEffect(() => { loadCart(); }, [loadCart]);\r\n  useEffect(() => { saveCart(); }, [saveCart]);\r\n  useEffect(() => { mergeCarts(); }, [mergeCarts]);\r\n\r\n  // Cart actions\r\n  const addToCart = (item) => {\r\n    setCartItems(prev => {\r\n      const existing = prev.find(i => i.id === item.id && i.size === item.size);\r\n      return existing \r\n        ? prev.map(i => i === existing ? {...i, quantity: i.quantity + (item.quantity || 1)} : i)\r\n        : [...prev, { ...item, quantity: item.quantity || 1 }];\r\n    });\r\n    toast.success(`${item.name} added to cart!`);\r\n  };\r\n\r\n  const removeFromCart = (id, size) => {\r\n    setCartItems(prev => prev.filter(i => !(i.id === id && i.size === size)));\r\n    toast.success('Item removed');\r\n  };\r\n\r\n  const updateQuantity = (id, size, quantity) => {\r\n    if (quantity < 1) return;\r\n    setCartItems(prev => prev.map(i => \r\n      i.id === id && i.size === size ? { ...i, quantity } : i\r\n    ));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n    toast.success('Cart cleared');\r\n  };\r\n\r\n  // Calculations\r\n  const subtotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n  const tax = subtotal * 0.1;\r\n  const total = subtotal + tax;\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cartItems, addToCart, removeFromCart, updateQuantity, clearCart,\r\n      subtotal, itemCount, total, loading\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}