{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\e-commerce\\\\front_end_copy\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Login with backend\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/users', {\n        method: 'GET'\n      });\n      if (!res.ok) throw new Error('Failed to fetch users');\n      const users = await res.json();\n      const user = users.find(u => u.email === email && u.password === password);\n      if (!user) throw new Error('Invalid email or password');\n      setCurrentUser(user);\n      toast.success('Logged in successfully!');\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register with backend\n  const register = async (email, password, displayName) => {\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: displayName,\n          email,\n          password\n        })\n      });\n      if (!res.ok) throw new Error('Failed to register');\n      const user = await res.json();\n      setCurrentUser(user);\n      toast.success('Account created successfully!');\n      return user;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = async () => {\n    setCurrentUser(null);\n    toast.success('Logged out successfully!');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"ta0ozVSi/laveBdN8v1z4lKHbzA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","login","email","password","res","fetch","method","ok","Error","users","json","user","find","u","success","error","message","register","displayName","headers","body","JSON","stringify","name","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","$RefreshReg$"],"sources":["C:/Users/kiran/Downloads/e-commerce/front_end_copy/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Login with backend\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/users', {\r\n        method: 'GET',\r\n      });\r\n      if (!res.ok) throw new Error('Failed to fetch users');\r\n      const users = await res.json();\r\n      const user = users.find(u => u.email === email && u.password === password);\r\n      if (!user) throw new Error('Invalid email or password');\r\n      setCurrentUser(user);\r\n      toast.success('Logged in successfully!');\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register with backend\r\n  const register = async (email, password, displayName) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: displayName, email, password }),\r\n      });\r\n      if (!res.ok) throw new Error('Failed to register');\r\n      const user = await res.json();\r\n      setCurrentUser(user);\r\n      toast.success('Account created successfully!');\r\n      return user;\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = async () => {\r\n    setCurrentUser(null);\r\n    toast.success('Logged out successfully!');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!currentUser,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}