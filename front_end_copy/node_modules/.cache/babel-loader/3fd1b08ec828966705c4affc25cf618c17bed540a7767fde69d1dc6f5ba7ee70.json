{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\e-commerce\\\\front_end_copy\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  // Load cart from localStorage as fallback\n  const [cartItems, setCartItems] = useState(() => {\n    const stored = localStorage.getItem('cartItems');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    currentUser\n  } = useAuth();\n\n  // Sync cartItems to localStorage\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // On login, merge local cart with backend cart\n  useEffect(() => {\n    if (currentUser && cartItems.length > 0) {\n      // Send local cart to backend, then reload cart from backend\n      fetch('http://localhost:5000/api/cart/merge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items: cartItems\n        })\n      }).then(() => loadCart());\n    }\n    // eslint-disable-next-line\n  }, [currentUser]);\n\n  // Load cart from backend, fallback to localStorage\n  const loadCart = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/cart');\n      if (!res.ok) throw new Error('Failed to fetch cart');\n      const data = await res.json();\n      setCartItems(data.cart);\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\n    } catch (err) {\n      // fallback: keep localStorage cart\n      setError('Could not load cart from server, using local cart.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add to cart via backend, fallback to local\n  const addToCart = async item => {\n    try {\n      const res = await fetch('http://localhost:5000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      });\n      if (!res.ok) throw new Error('Failed to add to cart');\n      const data = await res.json();\n      setCartItems(data.cart);\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\n    } catch (err) {\n      // fallback: add to localStorage\n      setCartItems(prev => {\n        const existing = prev.find(i => i.id === item.id);\n        if (existing) {\n          return prev.map(i => i.id === item.id ? {\n            ...i,\n            quantity: i.quantity + (item.quantity || 1)\n          } : i);\n        }\n        return [...prev, {\n          ...item,\n          quantity: item.quantity || 1\n        }];\n      });\n      setError('Could not sync with server, added to local cart.');\n    }\n  };\n\n  // Remove from cart via backend, fallback to local\n  const removeFromCart = async id => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/cart/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to remove from cart');\n      const data = await res.json();\n      setCartItems(data.cart);\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\n    } catch (err) {\n      setCartItems(prev => prev.filter(i => i.id !== id));\n      setError('Could not sync with server, removed from local cart.');\n    }\n  };\n\n  // Update quantity (backend, fallback to local)\n  const updateQuantity = async (id, quantity) => {\n    if (quantity < 1) return removeFromCart(id);\n    try {\n      const res = await fetch(`http://localhost:5000/api/cart/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          quantity\n        })\n      });\n      if (!res.ok) throw new Error('Failed to update quantity');\n      const data = await res.json();\n      setCartItems(data.cart);\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\n    } catch (err) {\n      setCartItems(prev => prev.map(i => i.id === id ? {\n        ...i,\n        quantity\n      } : i));\n      setError('Could not sync with server, updated local cart.');\n    }\n  };\n\n  // Clear cart (remove all items)\n  const clearCart = async () => {\n    for (const item of cartItems) {\n      await removeFromCart(item.id);\n    }\n  };\n\n  // Calculations\n  const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  const tax = subtotal * 0.1;\n  const total = subtotal + tax;\n  useEffect(() => {\n    loadCart();\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (!currentUser) {\n      setCartItems([]);\n      localStorage.removeItem('cartItems');\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateQuantity,\n      subtotal,\n      itemCount,\n      total,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"neiYGTDr+6QHrmzfxdY9GivrVdc=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useAuth","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","stored","localStorage","getItem","JSON","parse","loading","setLoading","error","setError","currentUser","setItem","stringify","length","fetch","method","headers","body","items","then","loadCart","res","ok","Error","data","json","cart","err","addToCart","item","prev","existing","find","i","id","map","quantity","removeFromCart","filter","updateQuantity","clearCart","subtotal","reduce","sum","price","itemCount","tax","total","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/kiran/Downloads/e-commerce/front_end_copy/src/Context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  // Load cart from localStorage as fallback\r\n  const [cartItems, setCartItems] = useState(() => {\r\n    const stored = localStorage.getItem('cartItems');\r\n    return stored ? JSON.parse(stored) : [];\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  // Sync cartItems to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  // On login, merge local cart with backend cart\r\n  useEffect(() => {\r\n    if (currentUser && cartItems.length > 0) {\r\n      // Send local cart to backend, then reload cart from backend\r\n      fetch('http://localhost:5000/api/cart/merge', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ items: cartItems }),\r\n      })\r\n        .then(() => loadCart());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentUser]);\r\n\r\n  // Load cart from backend, fallback to localStorage\r\n  const loadCart = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/cart');\r\n      if (!res.ok) throw new Error('Failed to fetch cart');\r\n      const data = await res.json();\r\n      setCartItems(data.cart);\r\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\r\n    } catch (err) {\r\n      // fallback: keep localStorage cart\r\n      setError('Could not load cart from server, using local cart.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add to cart via backend, fallback to local\r\n  const addToCart = async (item) => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/cart', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(item),\r\n      });\r\n      if (!res.ok) throw new Error('Failed to add to cart');\r\n      const data = await res.json();\r\n      setCartItems(data.cart);\r\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\r\n    } catch (err) {\r\n      // fallback: add to localStorage\r\n      setCartItems(prev => {\r\n        const existing = prev.find(i => i.id === item.id);\r\n        if (existing) {\r\n          return prev.map(i => i.id === item.id ? { ...i, quantity: i.quantity + (item.quantity || 1) } : i);\r\n        }\r\n        return [...prev, { ...item, quantity: item.quantity || 1 }];\r\n      });\r\n      setError('Could not sync with server, added to local cart.');\r\n    }\r\n  };\r\n\r\n  // Remove from cart via backend, fallback to local\r\n  const removeFromCart = async (id) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/cart/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!res.ok) throw new Error('Failed to remove from cart');\r\n      const data = await res.json();\r\n      setCartItems(data.cart);\r\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\r\n    } catch (err) {\r\n      setCartItems(prev => prev.filter(i => i.id !== id));\r\n      setError('Could not sync with server, removed from local cart.');\r\n    }\r\n  };\r\n\r\n  // Update quantity (backend, fallback to local)\r\n  const updateQuantity = async (id, quantity) => {\r\n    if (quantity < 1) return removeFromCart(id);\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/cart/${id}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ quantity }),\r\n      });\r\n      if (!res.ok) throw new Error('Failed to update quantity');\r\n      const data = await res.json();\r\n      setCartItems(data.cart);\r\n      localStorage.setItem('cartItems', JSON.stringify(data.cart));\r\n    } catch (err) {\r\n      setCartItems(prev => prev.map(i => i.id === id ? { ...i, quantity } : i));\r\n      setError('Could not sync with server, updated local cart.');\r\n    }\r\n  };\r\n\r\n  // Clear cart (remove all items)\r\n  const clearCart = async () => {\r\n    for (const item of cartItems) {\r\n      await removeFromCart(item.id);\r\n    }\r\n  };\r\n\r\n  // Calculations\r\n  const subtotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n  const tax = subtotal * 0.1;\r\n  const total = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    loadCart();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      setCartItems([]);\r\n      localStorage.removeItem('cartItems');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cartItems, addToCart, removeFromCart, clearCart, updateQuantity,\r\n      subtotal, itemCount, total, loading, error\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}